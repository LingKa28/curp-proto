syntax = "proto3";

package messagepb;

option go_package = ".;curpapi";

import "command.proto";

message FetchLeaderRequest {
}

message FetchLeaderResponse {
    optional uint64 leader_id = 1;
    uint64 term = 2;
}

message FetchClusterRequest {
}

message FetchClusterResponse {
    optional uint64 leader_id = 1;
    map<uint64, string> all_members = 2;
    uint64 term = 3;
}

message IdSet {
    repeated bytes ids = 1;
}

message FetchReadStateRequest {
    bytes command = 1;
}

message FetchReadStateResponse {
    oneof read_state {
        IdSet ids = 1;
        uint64 commit_index = 2;
    }
}

message ShutdownRequest {
    string id = 1;
}

message ShutdownResponse {
    optional uint64 leader_id = 1;
    uint64 term = 2;
    // The original type is ProposeError
    optional bytes error = 3;
}

service Protocol {
    rpc Propose(commandpb.ProposeRequest) returns (commandpb.ProposeResponse);
    rpc WaitSynced(commandpb.WaitSyncedRequest)
        returns (commandpb.WaitSyncedResponse);
    rpc Shutdown(ShutdownRequest) returns (ShutdownResponse);
    rpc FetchLeader(FetchLeaderRequest) returns (FetchLeaderResponse);
    rpc FetchCluster(FetchClusterRequest) returns (FetchClusterResponse);
    rpc FetchReadState(FetchReadStateRequest) returns (FetchReadStateResponse);
}
